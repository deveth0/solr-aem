<?xml version="1.0" encoding="UTF-8"?>
<jcr:root xmlns:jcr="http://www.jcp.org/jcr/1.0" xmlns:cq="http://www.day.com/jcr/cq/1.0" xmlns:mix="http://www.jcp.org/jcr/mix/1.0" xmlns:nt="http://www.jcp.org/jcr/nt/1.0" xmlns:sling="http://sling.apache.org/jcr/sling/1.0"
          jcr:primaryType="cq:Page">
  <jcr:content
    cq:template="/apps/wcm-io-samples/sample-app/templates/content/content"
    jcr:primaryType="cq:PageContent"
    jcr:title="Self-clocking signal"
    sling:resourceType="/apps/wcm-io-samples/sample-app/components/content/page/content">
    <content
      jcr:primaryType="nt:unstructured"
      sling:resourceType="wcm-io/wcm/parsys/components/parsys">
      <contentheadline
        jcr:primaryType="nt:unstructured"
        sling:resourceType="wcm-io-samples/sample-app/components/content/common/contentHeadline"
        headline="Self-clocking signal" />
      <contentrichtext
        jcr:primaryType="nt:unstructured"
        sling:resourceType="wcm-io-samples/sample-app/components/content/common/contentRichText"
        text="&lt;p&gt;{{unreferenced|date=October 2007}}

In [[telecommunications]] and [[electronics]], a &amp;apos;&amp;apos;&amp;apos;self-clocking signal&amp;apos;&amp;apos;&amp;apos; is one that can be decoded without the need for a separate [[clock signal]] or other source of [[synchronization]]. This is usually done by including embedded synchronization information within the signal, and adding constraints on the coding of the data payload such that false synchronization can easily be detected.

Most [[line code]]s are designed to be self-clocking.

==Isochronicity and anisochronicity==
If a clock signal is embedded in the data transmission, there are two possibilities: the clock signals are sent at the same time as the data ([[isochronous]]), or at a different time ([[anisochronous]]).

===Isochronous self-clocking signals===
If the embedded clock signal is isochronous, it gets sent simultaneously with the data. Below is an example signal, in this case using the [[Manchester code]] self-clocking signal. The data and clock cycles can be thought of as &amp;quot;adding up&amp;quot; to a combination, where both the clock cycle and the data can be retrieved from the transmitted signal.

[[Image:Manchester_encoding_both_conventions.svg]]

===Anisochronous self-clocking signals===
Anisochronous self-clocking signals do not combine clock cycles and data transfer into one continuous signal. Instead, the transmission of clock cycles and data transmission is modulated. Below is an example signal used in [[asynchronous serial communication]], where it is made clear that the information about the clock speed is transmitted in a different timeframe than the actual data.

[[Image:Puerto serie Rs232.png]]

==Implementations==
Example uses of self-clocking signal protocols include:
*[[Isochronous]]
**[[Manchester code]], where the clock signals occur at the transition points.
**[[Plesiochronous Digital Hierarchy]] signals
**[[Eight-to-Fourteen Modulation]]
**[[4B5B]]
**[[8b/10b encoding]]
**[[HDLC]]
**[[Modified Frequency Modulation]]
*[[Anisochronous]]
**[[Morse code]]
**[[Asynchronous start-stop]]

Most of these codes can be seen as a kind of [[Run Length Limited]] code. Those constraints on &amp;quot;runs&amp;quot; of zeros and &amp;quot;runs&amp;quot; of ones ensure that transitions occur often enough to keep the receiver synchronized.

Such self-clocking signals can be decoded correctly into a stream of bits without [[bit slip]].
To further decode that stream of bits and decide which bit is the first bit of a byte, often a [[self-synchronizing code]] is used.

== Analog examples ==
[[Amplitude modulation]] – [[modulation|modulating]] a signal &amp;lt;math&amp;gt;M(t)&amp;lt;/math&amp;gt; by changing the amplitude of a carrier wave, as in:
:&amp;lt;math&amp;gt;y(t) = M(t) \cdot \cos(\omega_c t),&amp;lt;/math&amp;gt;
is self-clocking, as the zero crossings serve as a [[clock pulse]].

One may consider this clock pulse redundant information, or at least a wasteful use of channel capacity, and duplex the channel by varying the phase, as in [[polar modulation]], or adding another signal that is 90° out of phase (a sine wave), as in [[quadrature modulation]]. The result is to send twice as many signals over the channel, at the cost of losing the clock, and thus suffering signal degradation in case of [[clock drift]] (the analog equivalent of bit drift).

This demonstrates how encoding clocking or synchronization in a code costs channel capacity, and illustrates the trade-off.

== See also ==

* [[delay insensitive circuit]]

[[Category:Digital electronics]]
[[Category:Synchronization]]&lt;/p&gt;" />
    </content>
  </jcr:content>
</jcr:root>
