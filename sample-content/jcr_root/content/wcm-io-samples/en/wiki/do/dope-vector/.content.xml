<?xml version="1.0" encoding="UTF-8"?>
<jcr:root xmlns:jcr="http://www.jcp.org/jcr/1.0" xmlns:cq="http://www.day.com/jcr/cq/1.0" xmlns:mix="http://www.jcp.org/jcr/mix/1.0" xmlns:nt="http://www.jcp.org/jcr/nt/1.0" xmlns:sling="http://sling.apache.org/jcr/sling/1.0"
          jcr:primaryType="cq:Page">
  <jcr:content
    cq:template="/apps/wcm-io-samples/sample-app/templates/content/content"
    jcr:primaryType="cq:PageContent"
    jcr:title="Dope vector"
    sling:resourceType="/apps/wcm-io-samples/sample-app/components/content/page/content">
    <content
      jcr:primaryType="nt:unstructured"
      sling:resourceType="wcm-io/wcm/parsys/components/parsys">
      <contentheadline
        jcr:primaryType="nt:unstructured"
        sling:resourceType="wcm-io-samples/sample-app/components/content/common/contentHeadline"
        headline="Dope vector" />
      <contentrichtext
        jcr:primaryType="nt:unstructured"
        sling:resourceType="wcm-io-samples/sample-app/components/content/common/contentRichText"
        text="&lt;p&gt;In [[computer programming]], a &amp;apos;&amp;apos;&amp;apos;dope vector&amp;apos;&amp;apos;&amp;apos; is a [[data structure]] used to hold information about a [[data object]],&amp;lt;ref&amp;gt;Pratt T. and M. Zelkowitz, Programming Languages: Design and Implementation (Third Edition), Prentice Hall, Upper Saddle River, NJ, (1996) pp 114&amp;lt;/ref&amp;gt; e.g. an [[Array data structure|array]], especially its [[Computer Storage|memory layout]].

A dope vector typically contains information about the type of array element, [[Rank (computer programming)|rank of an array]], the [[extents of an array]], and the [[stride of an array]] as well as a pointer to the block in memory containing the array elements.

It is often used in [[compilers]] to pass entire arrays between [[Subroutine|procedures]] in a [[high level language]] like [[Fortran]].

Prior to the invention of the linked-list a dope vector was used internally in the internal structure of computer systems.{{cn|date=March 2013}}

The dope vector included an identifier, a length, a parent address, and a next child address.  The identifier was an assigned name and was mostly useless, but the length was the amount of allocated storage to this vector from the end of the dope vector that contained data of use to the internal processes of the computer. This length by many was called the offset, span of vector length. The parent and child references were absolute core references, or register and offset settings to the parent or child depending on the type of computer.

Dope vectors were managed internally by the operating system and allowed the processor to allocate and de-allocate storage in specific segments as needed.

Later dope vectors had a status bit that told the system if they were active; if it was not active it would be reallocated when needed. Using this technology the computer could perform a more granular memory management.

==See also==
[[Data descriptor]]

==References==
&amp;lt;references/&amp;gt;

{{DEFAULTSORT:Dope Vector}}
[[Category:Arrays]]


{{compu-prog-stub}}&lt;/p&gt;" />
    </content>
  </jcr:content>
</jcr:root>
